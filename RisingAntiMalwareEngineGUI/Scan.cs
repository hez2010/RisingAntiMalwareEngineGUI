using System;
using System.Diagnostics;
using System.IO;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace RisingAntiMalwareEngineGUI
{
    class virInfo
    {
        private string _fileName;
        private string _virName;
        private string _detectEngine;
        public string FileName
        {
            get { return _fileName; }
            set { _fileName = value; }
        }
        public string VirName
        {
            get { return _virName; }
            set { _virName = value; }
        }
        public string DetectEngine
        {
            get { return _detectEngine; }
            set { _detectEngine = value; }
        }
        public virInfo()
        {
            _fileName = null;
            _virName = null;
            _detectEngine = null;
        }
        public virInfo(string fileName,string virName, string detectEngine)
        {
            _fileName = fileName;
            _virName = virName;
            _detectEngine = detectEngine;
        }
    }
    class Scan
    {
        private JObject objJsonResult;
        public void ParseJsonResult(string strResultJson, ref virInfo obj)
        {
            objJsonResult = JObject.Parse(strResultJson);
            try
            {
                obj.FileName = objJsonResult["filename"].ToString();
                obj.VirName = objJsonResult["infect"]["threat"].ToString();
                obj.DetectEngine = objJsonResult["infect"]["engine"].ToString();
            }
            catch (Exception)
            {
                return;
            }
            return;
        }

        public bool Start(string fileName, string _params, Action<virInfo> reCallAction)
        {
            if (!Directory.Exists(fileName) && !File.Exists(fileName))
            {
                return false;
            }
            Scaning(fileName, _params, reCallAction);
            return true;
        }
        private void Scaning(string fileName, string _params, Action<virInfo> reCallAction)
        {
            Task.Run(() =>
            {
                Process scanProcess = new Process
                {
                    StartInfo =
                    {
                        Arguments = "\""+fileName +"\""+ " -output-json " + _params,
                        FileName = "ramecl.exe",
                        RedirectStandardOutput = true,
                        CreateNoWindow = true,
                        WindowStyle = ProcessWindowStyle.Hidden,
                        UseShellExecute = false
                    },
                };
                scanProcess.Start();
                scanProcess.BeginOutputReadLine();
                scanProcess.OutputDataReceived += (o, args) =>
                {
                    if (String.IsNullOrEmpty(args.Data) == false)
                    {
                        virInfo objvirInfo = new virInfo();
                        ParseJsonResult(args.Data, ref objvirInfo);
                        if (objvirInfo.FileName != null)
                        {
                            reCallAction(objvirInfo);
                        }
                    }
                };
            });
        }
    }
}
