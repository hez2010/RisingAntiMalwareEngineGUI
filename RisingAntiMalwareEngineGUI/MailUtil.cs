using System.Collections.Generic;
using System.Net.Mail;
using System.Net;
using System.IO;
using System.Net.Mime;

namespace RisingAntiMalwareEngineGUI
{
    class MailUtil
    {
        public bool SendMailWithAttachments(string strReceiveAddr, string strSubject, string strBody, List<string>fileNameList, ref string strErrMsg)
        {
            try
            {
                MailMessage mailmessage = new MailMessage("virus_feedback@universeinc.cn", strReceiveAddr, strSubject, strBody);
                mailmessage.Priority = MailPriority.Normal;
                SmtpClient smtpClient = new SmtpClient("mail.universeinc.cn", 25);
                smtpClient.Credentials = new NetworkCredential("virus_feedback@universeinc.cn", "qwertyuiop*123");
                Attachment attachment = null;
                if (fileNameList.Count > 0)
                {
                    foreach (var i in fileNameList)
                    {
                        if (File.Exists(i))
                        {
                            string extName = Path.GetExtension(i).ToLower();
                            if (extName == ".rar" || extName == ".zip" || extName == ".7z")
                            {
                                attachment = new Attachment(i, MediaTypeNames.Application.Zip);
                            }
                            else
                            {
                                attachment = new Attachment(i, MediaTypeNames.Application.Octet);
                            }
                            ContentDisposition cd = attachment.ContentDisposition;
                            cd.CreationDate = File.GetCreationTime(i);
                            cd.ModificationDate = File.GetLastWriteTime(i);
                            cd.ReadDate = File.GetLastAccessTime(i);
                            mailmessage.Attachments.Add(attachment);
                        }
                    }
                }
                smtpClient.Send(mailmessage);
            }
            catch (SmtpException se)
            {
                strErrMsg = se.StatusCode.ToString();
                return false;
            }
            return true;
        }
    }
}
